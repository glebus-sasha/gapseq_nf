// Define general pipeline parameters
params.outdir           = "../results"        // Output directory for results
params.cpus             = 1                   // Number of CPUs to use
params.memory           = 4                   // Amount of memory (GB) to use
params.reports          = false               // Generate pipeline reports

// Define default branch for the pipeline
manifest.defaultBranch  = 'main'              // https://github.com/nextflow-io/nextflow/issues/3593

// Configuration for generating pipeline reports if enabled
if (params.reports) {
    def trace_timestamp     = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')                                // Define trace timestamp
    dag.enabled             = true
    dag.file                = "${params.outdir}/pipeline_info/${trace_timestamp}-dag.html"                      // DAG visualization file
    report.enabled          = true
    report.file             = "${params.outdir}/pipeline_info/${trace_timestamp}-report.html"                   // Report file
    timeline.enabled        = true
    timeline.file           = "${params.outdir}/pipeline_info/${trace_timestamp}-timeline.html"                 // Timeline file
    trace.enabled           = true
    trace.file              = "${params.outdir}/pipeline_info/${trace_timestamp}-trace.txt"                     // Trace file
}

// Define profiles for different environments
profiles {
    // Local profile configuration
    local {
        params.outdir           = "results"                                                              // Output directory for results
        params.data            = "./test_data/test.fna"                                                     // Data
        params.reports          = true 
    }

    // Docker environment configuration
    docker {
        docker.enabled         = true
    }
    // Singularity environment configuration
    singularity {
        singularity.enabled    = true
        
    }
    // Apptainer environment configuration
    apptainer {
        apptainer.enabled      = true
    }

    // Conda environment configuration
    conda {
        conda.enabled          = true
    }

    // Mamba environment configuration
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
    }
}